@page "/admin/contactinfo"
@inherits OwningComponentBase<IStoreRepository>

<h1 class="text-center">Контактная информация</h1>
<EditForm Model="ContactsInfo" OnValidSubmit="SaveContacts">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Email</label>
        <ValidationMessage For="@(() => ContactsInfo.Email)" />
        <input class="form-control" type="email" @bind="@ContactsInfo.Email" pattern="^[\w-\.]+@@([\w-]+\.)+[\w-]{2,4}$" required />
    </div>
    <div class="form-group">
        <label>Номер телефона</label>
        <ValidationMessage For="@(() => ContactsInfo.Phone)" />
        <input class="form-control" @bind="@ContactsInfo.Phone" type="tel" pattern="^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$" placeholder="+79000000000" required />
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Сохранить</button>
    </div>
</EditForm>

@code {
    public IStoreRepository Repository => Service;
    public ContactsInfo ContactsInfo { get; set; }
    public bool IsNewContacts { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        ContactsInfo = Repository.ContactsInfos.FirstOrDefault();
        if (ContactsInfo == null)
        {
            IsNewContacts = true;
            ContactsInfo = new();
        }
    }

    public void SaveContacts()
    {
        if (IsNewContacts)
        {
            Repository.CreateContacts(ContactsInfo);
            IsNewContacts = false;
        }
        else
        {
            Repository.SaveContacts(ContactsInfo);
        }
    }
}
