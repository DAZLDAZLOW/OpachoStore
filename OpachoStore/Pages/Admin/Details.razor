@page "/admin/products/details/{id:long}"

<h3 class="bg-info text-white text-center p-1">Подробности</h3>
<table class="table table-sm table-bordered table-striped">
    <tbody>
        <tr><th>ID</th><td>@Product?.ProductID</td></tr>
        <tr><th>Наименование</th><td>@Product?.Title</td></tr>
        <tr><th>Описание</th><td>@Product?.Description</td></tr>
        <tr><th>Категория</th><td>@Product?.Category</td></tr>
        <tr><th>Стоимость</th><td>@Product?.GetStringPrice()</td></tr>
        <tr><th style="text-align:center;" colspan="2">Характеристики</th></tr>
        @foreach (Property prop in Product!.Properties)
        {
            <tr><th>@prop.Specification.Title</th><td>@prop.Value</td></tr>
        }
    </tbody>
</table>
<NavLink class="btn btn-warning" href="@EditUrl">Изменить</NavLink>
<NavLink class="btn btn-secondary" href="/admin/products">Назад</NavLink>

@code {
    [Inject]
    public IStoreRepository? Repository { get; set; }

    [Parameter]
    public long Id { get; set; }
    public Product? Product { get; set; }
    protected override void OnParametersSet()
    {
        Product = Repository?.Products.Include(x => x.Properties).ThenInclude(e => e.Specification).FirstOrDefault(p => p.ProductID == Id);
    }
    public string EditUrl => $"/admin/products/edit/{Product?.ProductID}";
}